{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khm13\\\\Documents\\\\workspace\\\\portfolio-2024\\\\src\\\\components\\\\Checkbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Checkbox({\n  label,\n  onChange\n}) {\n  _s();\n  var _checkedInputs;\n  const [isChecked, setIsChecked] = useState(false);\n  const handleChange = () => {\n    const newCheckedState = !isChecked;\n    setIsChecked(newCheckedState);\n    if (onChange) {\n      onChange(newCheckedState); // 부모 컴포넌트로 상태 전달\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"test\",\n      type: \"checkbox\",\n      value: \"\\uD14C\\uC2A4\\uD2B8\",\n      className: `filterCheckbox mr-[7px] align-[-3px]`,\n      checked: (_checkedInputs = checkedInputs) !== null && _checkedInputs !== void 0 && _checkedInputs.includes(`잇힝`) ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Checkbox, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Checkbox","label","onChange","_s","_checkedInputs","isChecked","setIsChecked","handleChange","newCheckedState","children","id","type","value","className","checked","checkedInputs","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/khm13/Documents/workspace/portfolio-2024/src/components/Checkbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Checkbox({ label, onChange }) {\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleChange = () => {\r\n        const newCheckedState = !isChecked;\r\n        setIsChecked(newCheckedState);\r\n\r\n        if (onChange) {\r\n            onChange(newCheckedState); // 부모 컴포넌트로 상태 전달\r\n        }\r\n    };\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                id=\"test\"\r\n                type=\"checkbox\"\r\n                value=\"테스트\"\r\n                className={`filterCheckbox mr-[7px] align-[-3px]`}    \r\n                checked={checkedInputs?.includes(`잇힝`) ? true : false}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default Checkbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,eAAe,GAAG,CAACH,SAAS;IAClCC,YAAY,CAACE,eAAe,CAAC;IAE7B,IAAIN,QAAQ,EAAE;MACVA,QAAQ,CAACM,eAAe,CAAC,CAAC,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAU,QAAA,gBACIV,OAAA;MACIW,EAAE,EAAC,MAAM;MACTC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAC,oBAAK;MACXC,SAAS,EAAE,sCAAuC;MAClDC,OAAO,EAAE,CAAAV,cAAA,GAAAW,aAAa,cAAAX,cAAA,eAAbA,cAAA,CAAeY,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACDnB,KAAK;EAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB;AAACjB,EAAA,CAxBQH,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}